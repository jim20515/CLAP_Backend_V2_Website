@model Demo.Areas.Admin.ViewModels.ExperimentApplyRUDViewModel

@{
    ViewBag.Title = "Details";
}

@section scripts {
    <script src="@Url.Content("~/Scripts/jquery.icheck.min.js")"></script>
    <script>
        $(document).ready(function () {
            
            $('.square input').iCheck({
                checkboxClass: 'icheckbox_square-red',
                radioClass: 'iradio_square-red'
            });
            
        });
    </script>

}

<div class="form-horizontal">
    <h2>實驗項目細項</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExperItemList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="square">
                @for (int i = 0; i < Model.ExperItemList.Count; i++)
                {
                    <div class="col-md-4">
                        @Html.CheckBoxFor(m => m.ExperItemList[i].Checked, new { @disabled = "disabled" })
                        @Html.DisplayFor(m => m.ExperItemList[i].Text)
                    </div>
                }
                    
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdatePolicyList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="square">
                @for (int i = 0; i < Model.UpdatePolicyList.Count; i++)
                {
                    <div class="col-md-4">
                        @Html.CheckBoxFor(m => m.UpdatePolicyList[i].Checked, new { @disabled = "disabled" })
                        @Html.DisplayFor(m => m.UpdatePolicyList[i].Name)
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModifyTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.ModifyTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

</div>

<p>
    <h4>@Html.ActionLink("修改", "Edit", new { id = Model.id }) | @Html.ActionLink("返回列表", "Index")</h4>
</p>
