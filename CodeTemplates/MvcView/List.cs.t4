<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header"><#= ViewName #></h1>
    </div>
    <!-- /.col-md-12 -->
</div>
<!-- /.row -->

@section scripts {
    <script src="@Url.Content("~/js/table-admin.js")"></script>
    <script>
        table.columnFilter({
            sPlaceHolder: "thead:after",
            aoColumns: [
				{ sSelector: "#col-1" },
				{ sSelector: "#col-2", type: "select", multiple: true, search: true },
				{ sSelector: "#col-3", type: "select" },
				{ sSelector: "#col-4", type: "number-range" },
				{ sSelector: "#col-5" },
				{ sSelector: "#col-6", type: "date-range" },
				{ sSelector: "#col-7", type: "date-range" },
				{ sSelector: "#col-8", type: "date-range" },
				{ sSelector: "#col-9", type: "select" }
            ]
        });
    </script>
}


<div class="panel panel-primary">
    <div class="panel-heading clearfix">
        <h3 class="panel-title"></h3>
        <div class="pull-left">
            <a href="@Url.Action("Create")" id="newData" class="btn btn-sm btn-ghost btn-outline"><i class="fa fa-plus"></i> 新增</a>
            <a href="@Url.Action("Details")" id="detailData" class="btn btn-sm btn-ghost btn-outline hidden"><i class="fa fa-file-text-o"></i> 詳細</a>
            <a href="@Url.Action("Edit")" id="editData" class="btn btn-sm btn-ghost btn-outline hidden"><i class="fa fa-pencil"></i> 修改</a>
            <a href="@Url.Action("Delete")" id="deleteData" class="btn btn-sm btn-ghost btn-outline hidden"><i class="fa fa-trash"></i> 刪除</a>
        </div>
        <div class="pull-right">
            <a href="#" id="filter-toggle" class="btn btn-sm btn-ghost btn-outline" data-toggle="modal" data-target="#filterModal"><i class="fa fa-filter"></i> 進階搜尋</a>
        </div>
    </div>


    <div class="modal fade" id="filterModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">進階搜尋</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal form-row-stripped">
                        <fieldset>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
var i = 1;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
		                    <div class="form-group">
                                <label class="col-md-3 control-label">@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</label>
                                <div class="col-md-8"><div id="col-<#= i #>"></div></div>
                            </div>
<#
		i++;
    }
}
#>
                        </fieldset>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

<div class="panel-body">
<table id="example" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
	<thead>
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
    </tr>
	</thead>
	<tbody>
@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}
#>
    </tr>
}
	</tbody>

</table>
</div>
</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>